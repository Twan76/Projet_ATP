tournament_atp <- separate(tournament_atp, col="Details", into=c("Tournoi","Ville","Pays","Date"), sep=", ")
tournament_atp <- separate(tournament_atp, col="Date", into=c("Debut","Fin"), sep=" - ")
#Now extracting the players' wiki pages so that I can look up their personal information (place of birth, height, playing position)
player_links <- read_html(x) %>%
html_nodes(xpath = '//*[@class="tourney-results-wrapper"]') %>%
html_nodes("td > div > a") %>%
html_attr("href") #Extract the redirect link for each player
player_links <- player_links[seq(1,length(player_links),3)]
# Recuperer lien joueur atp world tour
tournament_atp <- tournament_atp %>% #Take the players data frame
mutate(player_links = player_links)
# Photo du joueur
player_image <- function (x) { #Creating a function that will...
read_html(paste0("https://www.atptour.com",x)) %>%
html_node(xpath = '//*[@id="playerProfileHero"]') %>%
html_node("img") %>%
html_attr("src") #Grab its URL location
}
tournament_atp <- mutate(tournament_atp, icon_joueur = map(player_links, player_image)) #Apply the function created above for each player
tournament_atp$icon_joueur <- paste0("https://www.atptour.com", tournament_atp$icon_joueur)
player_info <- function(x) { #Creating a function grabbing players' info that would be applied to every player.
player_info <- read_html(paste0("https://www.atptour.com",x)) %>%
html_node(xpath = '//*[@class="player-profile-hero-table"]') %>%
html_table(fill = TRUE) #Turn that info into a table
player_info <- data.frame(Age=player_info[1,1],Birthplace=player_info[2,1],TurnedPro=player_info[1,2],Play=player_info[2,2],Weight=player_info[1,3],Coach=player_info[2,3],Height=player_info[1,4])
names(player_info) = c("Age","LieuNaissance","ProDepuis","Style","Poids","Coach","Taille")
player_info$Age <- substr(player_info$Age,40,41)
player_info$LieuNaissance <- substr(player_info$LieuNaissance,117,nchar(player_info$LieuNaissance))
player_info$ProDepuis <- substr(player_info$ProDepuis,nchar(player_info$ProDepuis)-3,nchar(player_info$ProDepuis))
player_info$Style <- substr(player_info$Style,76,nchar(player_info$Style))
player_info$Poids <- substr(player_info$Poids, str_locate(player_info$Poids, "\\(")[,1]+1, str_locate(player_info$Poids, "\\)")[,1]-1)
player_info$Coach  <- str_replace(player_info$Coach, "Coach", "")
player_info$Coach  <- str_replace_all(player_info$Coach, "\r\n", "")
player_info$Coach  <- str_replace_all(player_info$Coach, "  ", "")
player_info$Taille <- substr(player_info$Taille, str_locate(player_info$Taille, "\\(")[,1]+1, str_locate(player_info$Taille, "\\)")[,1]-1)
return(player_info)
}
tournament_atp <- mutate(tournament_atp, player_data = map(player_links, player_info)) %>% unnest(player_data)
player_nationalite <- function(x) {
player_info_flag <- read_html(paste0("https://www.atptour.com",x)) %>%
html_node(xpath = '//*[@class="player-flag-code"]') %>%
html_text()
}
tournament_atp <- mutate(tournament_atp, Nationalite = map(player_links, player_nationalite))
# For each tournament, we add long and lat
tournament_atp <- mutate_geocode(tournament_atp, Ville, source = "google", output = "more")
tournament_atp <- tournament_atp %>%
select(-type, -loctype, -address, -north, -south, -east, -west) #Remove unneeded columns
#  Format date
tournament_atp$Debut <- str_replace_all(tournament_atp$Debut, "\\.", "-")
tournament_atp$Debut <- as.Date(tournament_atp$Debut)
tournament_atp$Fin <- str_replace_all(tournament_atp$Fin, "\\.", "-")
tournament_atp$Fin <- as.Date(tournament_atp$Fin)
# Renommer les surfaces
select_atp_outdoor_hard <- (tournament_atp$Surface == "Outdoor, Hard")
select_atp_outdoor_clay <- (tournament_atp$Surface == "Outdoor, Clay")
select_atp_outdoor_grass <- (tournament_atp$Surface == "Outdoor, Grass")
select_atp_indoor_hard <- (tournament_atp$Surface == "Indoor, Hard")
select_atp_indoor_clay <- (tournament_atp$Surface == "Indoor, Clay")
select_atp_indoor_carpet <- (tournament_atp$Surface == "Indoor, Carpet")
tournament_atp[select_atp_outdoor_hard,6] <- "Dur ext."
tournament_atp[select_atp_outdoor_clay,6] <- "TB ext."
tournament_atp[select_atp_outdoor_grass,6] <- "Gazon"
tournament_atp[select_atp_indoor_hard,6] <- "Dur int."
tournament_atp[select_atp_indoor_clay,6] <- "TB int."
tournament_atp[select_atp_indoor_carpet,6] <- "Moquette"
# Renommer les types de jeu
select_atp_droitier_rev2m <- (tournament_atp$Style == "Right-Handed, Two-Handed Backhand")
select_atp_droitier_rev1m <- (tournament_atp$Style == "Right-Handed, One-Handed Backhand")
select_atp_gaucher_rev2m <- (tournament_atp$Style == "Left-Handed, Two-Handed Backhand")
select_atp_gaucher_rev1m <- (tournament_atp$Style == "Left-Handed, One-Handed Backhand")
tournament_atp[select_atp_droitier_rev2m,15] <- "Droitier, revers à 2 mains"
tournament_atp[select_atp_droitier_rev1m,15] <- "Droitier, revers à 1 main"
tournament_atp[select_atp_gaucher_rev2m,15] <- "Gaucher, revers à 2 mains"
tournament_atp[select_atp_gaucher_rev1m,15] <- "Gaucher, revers à 1 main"
tournament_atp <- mutate(tournament_atp,
links = paste0("https://www.atptour.com", player_links), #Bringing in player links
popup_text = paste0("<center>", #Setting up poopup info
ifelse(!is.na(icon_joueur), paste0("<img src='",icon_joueur,"' width='100'>"), ""),
"</br><b>Vainqueur : </b> ", Vainqueur,
"</br><b>Nationalité : </b> ", Nationalite,
"</br><b>Age : </b> ", Age,
"</br><b>Naissance : </b> ", LieuNaissance,
"</br><b>Prise de raquette :</b> ", Style,
"</br><b>Taille :</b> ", Taille,
"</br><b>Poids :</b> ", Poids,
"</br><b>Coach :</b> ", Coach,
"</br><b>Pro depuis :</b> ", ProDepuis,
"</br><a href='", links, "' target='_blank'>More info...</a></center>"))
tournament_atp <- mutate(tournament_atp,
label_text = paste0("<center>", #Setting up poopup info
" <b>Tournoi : </b> ", Tournoi,", ", Ville,", ", Pays,
"</br><b>Surface : </b> ", Surface,
"</br><b> Date : </b> ", "Du ", format(Debut,"%d/%m/%Y"), " au ", format(Fin, "%d/%m/%Y"),
"</br><b>Catégorie :</b> ", Categorie, "</center>") %>% lapply(htmltools::HTML))
return(tournament_atp)
}
tournament_ATP <- tournament_atp(URL_ATP_World_Tour)
tournament_Challenger <- tournament_atp(URL_ATP_Challenger)
tournament_atp_final <- rbind(tournament_ATP,tournament_Challenger)
#Saving for the app
write_rds(tournament_atp_final, "tournament_atp_final.rds")
# ##############################################################
# Récupérer classements ATP 2022 (sortie chaque lundi)
x <- seq(as.Date("2022-01-01"), today(), by = "day")
lundis_2022 <- x[weekdays(x) == "lundi"]
y <- seq(ymd("2001-01-01"), today(), by="1 day")
lundis_mois_2001 <- y[weekdays(y) == "lundi" & day(y) <= 7]
ranking_par_date <- function(x) {
ranking_atp_maj <- c()
for(i in 1:length(x)) {
ranking_atp <- read_html(paste0("https://www.atptour.com/en/rankings/singles?rankRange=1-5000&rankDate=",x[i])) %>%
html_nodes(xpath = '//*[@id="player-rank-detail-ajax"]') %>%
html_table(fill = TRUE) %>% data.frame()
player_country <- read_html(paste0("https://www.atptour.com/en/rankings/singles?rankRange=1-5000&rankDate=",x[i])) %>%
html_nodes(xpath = '//*[@class="country-item"]') %>%
html_node("img") %>%
html_attr("alt") #Extract the redirect link for each player
# Recuperer lien joueur atp world tour
ranking_atp <- ranking_atp %>% #Take the players data frame
mutate(player_country = player_country)
if(nrow(ranking_atp)>0) { # Pas de classement semaine de grand chelem
ranking_atp <- ranking_atp[,c(1,2,11,4,5,6,9)]
ranking_atp$Date <- x[i]
colnames(ranking_atp) <- c("Rang","Diff rang / sem. der.", "Pays", "Joueur", "Age", "Points", "Points à défendre", "Date")
ranking_atp_maj <- rbind(ranking_atp_maj,ranking_atp)
}
}
ranking_atp_maj[,1] <- str_replace_all(ranking_atp_maj[,1] ,"T","")
ranking_atp_maj[,2] <- str_replace_all(ranking_atp_maj[,2],",","")
ranking_atp_maj[,6] <- str_replace_all(ranking_atp_maj[,6],",","")
ranking_atp_maj[,7] <- str_replace_all(ranking_atp_maj[,7],",","")
ranking_atp_maj[,1] <- as.integer(ranking_atp_maj[,1])
ranking_atp_maj[,2] <- as.integer(ranking_atp_maj[,2])
ranking_atp_maj[,6] <- as.integer(ranking_atp_maj[,6])
ranking_atp_maj[,7] <- as.integer(ranking_atp_maj[,7])
# Renommer les pays
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"AHO","Antilles Néerlandaises")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ALG","Algerie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"AND","Andorre")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ANT","Antigua et Barbuda")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ARG","Argentine")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ARM","Armenie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ARU","Aruba")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"AUS","Australie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"AUT","Autriche")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"AZE","Azerbaidjan")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BAH","Bahamas")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BAR","Barbade")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BDI","Burundi")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BEL","Belgique")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BEN","Benin")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BER","Bermudes")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BIH","Bosnie Herzegovine")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BLR","Bielorussie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BOL","Bolivie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BOT","Botswana")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BRA","Bresil")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BRN","Brunei")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BUL","Bulgarie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"BUR","Burkina Faso")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CAM","Cambodge")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CAN","Canada")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CAY","Iles Caymans")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CHI","Chili")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CHN","Chine")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CIV","Cote d'Ivoire")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CMR","Cameroun")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"COD","Republique democratique du Congo")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"COL","Colombie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CRC","Costa Rica")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CRO","Croatie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CUB","Cuba")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CUW","Curacao")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CYP","Chypre")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"CZE","Republique Tcheque")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"DEN","Danemark")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"DOM","Republique Dominicaine")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ECU","Equateur")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"EGY","Egypte")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ESA","Salvador")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ESP","Espagne")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"EST","Estonie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"FIN","Finlande")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"FRA","France")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"GAB","Gabon")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"GBR","Grande-Bretagne")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"GEO","Georgie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"GER","Allemagne")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"GHA","Ghana")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"GRE","Grece")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"GUA","Guatemala")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"GUD","Guadeloupe")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"GUM","Guam")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"HAI","Haiti")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"HKG","Hong Kong")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"HUN","Hongrie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"INA","Indonesie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"IND","Inde")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"IRI","Iran")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"IRL","Irelande")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ISL","Icelande")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ISR","Israel")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ISV","Iles Vierges")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ITA","Italie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"JAM","Jamaique")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"JOR","Jordanie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"JPN","Japon")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"KAZ","Kazakhstan")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"KEN","Kenya")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"KGZ","Kyrgyzstan")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"KOR","Corée du Sud")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"KSA","Arabie Saoudite")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"KUW","Koweit")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"LAT","Lettonie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"LIB","Liban")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"LIE","Liechenstein")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"LTU","Lituanie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"LUX","Luxembourg")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MAD","Madagascar")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MAR","Maroc")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MAS","Malaysie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MDA","Moldovie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MEX","Mexique")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MKD","Macédoine du Nord")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MLI","Mali")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MLT","Malte")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MNE","Montenegro")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MON","Monaco")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"MRI","Ile Maurice")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"NAM","Namibie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"NED","Pays-Bas")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"NGR","Nigeria")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"NMI","Iles Mariannes du Nord")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"NOR","Norvege")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"NZL","Nouvelle-Zelande")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"OMA","Oman")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"PAK","Pakistan")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"PAN","Panama")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"PAR","Paraguay")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"PER","Perou")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"PHI","Philippines")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"POL","Pologne")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"POR","Portugal")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"PUR","Porto Rico")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"QAT","Qatar")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ROM","Roumanie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ROU","Roumanie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"RSA","Afrique du Sud")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"RUS","Russie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"RWA","Rwanda")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SEN","Senegal")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SGP","Singapour")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SIN","Singapour")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SLE","Sierra Leone")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SLO","Slovenie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SMR","San Marin")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SOL","Iles Salomons")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SRB","Serbie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SRI","Sri Lanka")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SUD","Soudan")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SUI","Suisse")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SVK","Slovaquie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SWE","Suede")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"SYR","Syrie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"TAN","Tanzanie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"THA","Thailande")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"TJK","Tadjikistan")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"TKM","Turkmenistan")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"TOG","Togo")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"TPE","Taipei")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"TTO","Trinidad et Tobago")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"TUN","Tunisie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"TUR","Turquie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"UAE","Emirats Arabes Unis")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"UGA","Ouganda")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"UKR","Ukraine")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"URU","Uruguay")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"USA","Etats-Unis")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"UZB","Ouzbekistan")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"VEN","Venezuela")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"VIE","Vietnam")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"YUG","Yougoslavie")
ranking_atp_maj$Pays <- str_replace(ranking_atp_maj$Pays ,"ZIM","Zimbabwe")
return(ranking_atp_maj)
}
ranking_atp_2022 <- ranking_par_date(lundis_2022)
ranking_atp_mois_2001 <- ranking_par_date(lundis_mois_2001)
#Saving for the app
write_rds(ranking_atp_2022, "ranking_atp_2022.rds")
write_rds(ranking_atp_mois_2001, "ranking_atp_mois_2001.rds")
URL_ATP_World_Tour_Num1 <- "https://www.atptour.com/en/rankings/former-no-1s"
ranking_atp_num1 <- read_html(URL_ATP_World_Tour_Num1) %>%
html_nodes(xpath = '//*[@class="mega-table"]') %>%
html_table(fill = TRUE) %>% data.frame()
player_country <- read_html(URL_ATP_World_Tour_Num1) %>%
html_nodes(xpath = '//*[@class="country-item"]') %>%
html_node("img") %>%
html_attr("alt") #Extract the redirect link for each player
# Recuperer lien joueur atp world tour
ranking_atp_num1 <- ranking_atp_num1 %>% #Take the players data frame
mutate(player_country = player_country)
ranking_atp_num1 <- ranking_atp_num1[,c(1,7,3:6)]
colnames(ranking_atp_num1) <- c("Rang","Pays", "Joueur", "Nombre semaines N°1", "Nombre semaines consécutives N°1", "Nombre fin d'années N°1")
ranking_atp_num1[,1] <- as.integer(ranking_atp_num1[,1])
ranking_atp_num1[,4] <- as.integer(ranking_atp_num1[,4])
ranking_atp_num1[,5] <- as.integer(ranking_atp_num1[,5])
ranking_atp_num1[,6] <- as.integer(ranking_atp_num1[,6])
# Renommer les pays
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"AHO","Antilles Néerlandaises")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ALG","Algerie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"AND","Andorre")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ANT","Antigua et Barbuda")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ARG","Argentine")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ARM","Armenie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ARU","Aruba")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"AUS","Australie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"AUT","Autriche")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"AZE","Azerbaidjan")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BAH","Bahamas")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BAR","Barbade")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BDI","Burundi")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BEL","Belgique")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BEN","Benin")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BER","Bermudes")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BIH","Bosnie Herzegovine")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BLR","Bielorussie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BOL","Bolivie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BOT","Botswana")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BRA","Bresil")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BRN","Brunei")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BUL","Bulgarie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"BUR","Burkina Faso")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CAM","Cambodge")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CAN","Canada")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CAY","Iles Caymans")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CHI","Chili")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CHN","Chine")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CIV","Cote d'Ivoire")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CMR","Cameroun")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"COD","Republique democratique du Congo")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"COL","Colombie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CRC","Costa Rica")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CRO","Croatie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CUB","Cuba")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CUW","Curacao")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CYP","Chypre")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"CZE","Republique Tcheque")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"DEN","Danemark")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"DOM","Republique Dominicaine")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ECU","Equateur")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"EGY","Egypte")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ESA","Salvador")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ESP","Espagne")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"EST","Estonie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"FIN","Finlande")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"FRA","France")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"GAB","Gabon")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"GBR","Grande-Bretagne")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"GEO","Georgie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"GER","Allemagne")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"GHA","Ghana")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"GRE","Grece")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"GUA","Guatemala")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"GUD","Guadeloupe")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"GUM","Guam")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"HAI","Haiti")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"HKG","Hong Kong")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"HUN","Hongrie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"INA","Indonesie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"IND","Inde")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"IRI","Iran")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"IRL","Irelande")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ISL","Icelande")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ISR","Israel")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ISV","Iles Vierges")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ITA","Italie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"JAM","Jamaique")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"JOR","Jordanie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"JPN","Japon")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"KAZ","Kazakhstan")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"KEN","Kenya")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"KGZ","Kyrgyzstan")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"KOR","Corée du Sud")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"KSA","Arabie Saoudite")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"KUW","Koweit")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"LAT","Lettonie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"LIB","Liban")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"LIE","Liechenstein")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"LTU","Lituanie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"LUX","Luxembourg")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MAD","Madagascar")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MAR","Maroc")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MAS","Malaysie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MDA","Moldovie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MEX","Mexique")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MKD","Macédoine du Nord")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MLI","Mali")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MLT","Malte")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MNE","Montenegro")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MON","Monaco")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"MRI","Ile Maurice")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"NAM","Namibie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"NED","Pays-Bas")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"NGR","Nigeria")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"NMI","Iles Mariannes du Nord")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"NOR","Norvege")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"NZL","Nouvelle-Zelande")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"OMA","Oman")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"PAK","Pakistan")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"PAN","Panama")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"PAR","Paraguay")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"PER","Perou")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"PHI","Philippines")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"POL","Pologne")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"POR","Portugal")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"PUR","Porto Rico")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"QAT","Qatar")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ROM","Roumanie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ROU","Roumanie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"RSA","Afrique du Sud")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"RUS","Russie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"RWA","Rwanda")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SEN","Senegal")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SGP","Singapour")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SIN","Singapour")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SLE","Sierra Leone")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SLO","Slovenie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SMR","San Marin")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SOL","Iles Salomons")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SRB","Serbie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SRI","Sri Lanka")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SUD","Soudan")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SUI","Suisse")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SVK","Slovaquie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SWE","Suede")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"SYR","Syrie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"TAN","Tanzanie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"THA","Thailande")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"TJK","Tadjikistan")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"TKM","Turkmenistan")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"TOG","Togo")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"TPE","Taipei")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"TTO","Trinidad et Tobago")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"TUN","Tunisie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"TUR","Turquie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"UAE","Emirats Arabes Unis")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"UGA","Ouganda")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"UKR","Ukraine")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"URU","Uruguay")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"USA","Etats-Unis")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"UZB","Ouzbekistan")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"VEN","Venezuela")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"VIE","Vietnam")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"YUG","Yougoslavie")
ranking_atp_num1$Pays <- str_replace(ranking_atp_num1$Pays ,"ZIM","Zimbabwe")
#Saving for the app
write_rds(ranking_atp_num1, "ranking_atp_num1.rds")
# Récupérer données Leaderboards pour construction radar
URL_ATP_World_Tour_Stats_ServiceGamesWon <- "https://www.atptour.com/en/stats/service-games-won/2022/all/all/"
URL_ATP_World_Tour_Stats_1stServe <- "https://www.atptour.com/en/stats/1st-serve/2022/all/all/"
URL_ATP_World_Tour_Stats_1stServePointsWon <- "https://www.atptour.com/en/stats/1st-serve-points-won/2022/all/all/"
URL_ATP_World_Tour_Stats_2ndServePointsWon <- "https://www.atptour.com/en/stats/2nd-serve-points-won/2022/all/all/"
URL_ATP_World_Tour_Stats_BreakPointsSaved <- "https://www.atptour.com/en/stats/break-points-saved/2022/all/all/"
URL_ATP_World_Tour_Stats_1stServeReturnPointsWon <- "https://www.atptour.com/en/stats/1st-serve-return-points-won/2022/all/all/"
URL_ATP_World_Tour_Stats_2ndServeReturnPointsWon <- "https://www.atptour.com/en/stats/2nd-serve-return-points-won/2022/all/all/"
player_stats_ServiceGamesWon <- read_html(URL_ATP_World_Tour_Stats_ServiceGamesWon) %>%
html_nodes(xpath = '//*[@class="stats-listing-table"]') %>%
html_table(fill = TRUE) %>% data.frame()
player_stats_ServiceGamesWon <- data.frame(Joueur=player_stats_ServiceGamesWon[seq(1,nrow(player_stats_ServiceGamesWon),2),5],PctSW=player_stats_ServiceGamesWon[seq(1,nrow(player_stats_ServiceGamesWon),2),6])
player_stats_1stServe <- read_html(URL_ATP_World_Tour_Stats_1stServe) %>%
html_nodes(xpath = '//*[@class="stats-listing-table"]') %>%
html_table(fill = TRUE) %>% data.frame()
player_stats_1stServe <- data.frame(Joueur=player_stats_1stServe[seq(1,nrow(player_stats_1stServe),2),5],Pct1S=player_stats_1stServe[seq(1,nrow(player_stats_1stServe),2),6])
player_stats <- inner_join(player_stats_ServiceGamesWon,player_stats_1stServe, by=c("Joueur"))
player_stats_1stServeWon <- read_html(URL_ATP_World_Tour_Stats_1stServePointsWon) %>%
html_nodes(xpath = '//*[@class="stats-listing-table"]') %>%
html_table(fill = TRUE) %>% data.frame()
player_stats_1stServeWon <- data.frame(Joueur=player_stats_1stServeWon[seq(1,nrow(player_stats_1stServeWon),2),5],Pct1SW=player_stats_1stServeWon[seq(1,nrow(player_stats_1stServeWon),2),6])
player_stats <- inner_join(player_stats,player_stats_1stServeWon, by=c("Joueur"))
player_stats_2ndServeWon <- read_html(URL_ATP_World_Tour_Stats_2ndServePointsWon) %>%
html_nodes(xpath = '//*[@class="stats-listing-table"]') %>%
html_table(fill = TRUE) %>% data.frame()
player_stats_2ndServeWon <- data.frame(Joueur=player_stats_2ndServeWon[seq(1,nrow(player_stats_2ndServeWon),2),5],Pct2SW=player_stats_2ndServeWon[seq(1,nrow(player_stats_2ndServeWon),2),6])
player_stats <- inner_join(player_stats,player_stats_2ndServeWon, by=c("Joueur"))
player_stats_BreakPointsSaved <- read_html(URL_ATP_World_Tour_Stats_BreakPointsSaved) %>%
html_nodes(xpath = '//*[@class="stats-listing-table"]') %>%
html_table(fill = TRUE) %>% data.frame()
player_stats_BreakPointsSaved <- data.frame(Joueur=player_stats_BreakPointsSaved[seq(1,nrow(player_stats_BreakPointsSaved),2),5], PctBPS=player_stats_BreakPointsSaved[seq(1,nrow(player_stats_BreakPointsSaved),2),6])
player_stats <- inner_join(player_stats,player_stats_BreakPointsSaved, by=c("Joueur"))
player_stats_1stServeReturnPointsWon <- read_html(URL_ATP_World_Tour_Stats_1stServeReturnPointsWon) %>%
html_nodes(xpath = '//*[@class="stats-listing-table"]') %>%
html_table(fill = TRUE) %>% data.frame()
player_stats_1stServeReturnPointsWon <- data.frame(Joueur=player_stats_1stServeReturnPointsWon[seq(1,nrow(player_stats_1stServeReturnPointsWon),2),5],P1SR=player_stats_1stServeReturnPointsWon[seq(1,nrow(player_stats_1stServeReturnPointsWon),2),6])
player_stats <- inner_join(player_stats,player_stats_1stServeReturnPointsWon, by=c("Joueur"))
player_stats_2ndServeReturnPointsWon <- read_html(URL_ATP_World_Tour_Stats_2ndServeReturnPointsWon) %>%
html_nodes(xpath = '//*[@class="stats-listing-table"]') %>%
html_table(fill = TRUE) %>% data.frame()
player_stats_2ndServeReturnPointsWon <- data.frame(Joueur=player_stats_2ndServeReturnPointsWon[seq(1,nrow(player_stats_2ndServeReturnPointsWon),2),5],P2SR=player_stats_2ndServeReturnPointsWon[seq(1,nrow(player_stats_2ndServeReturnPointsWon),2),6])
player_stats <- inner_join(player_stats,player_stats_2ndServeReturnPointsWon, by=c("Joueur"))
player_stats$PctSW <- as.numeric(str_replace(player_stats$PctSW, "%", ""))/100
player_stats$Pct1S <- as.numeric(str_replace(player_stats$Pct1S, "%", ""))/100
player_stats$Pct1SW <- as.numeric(str_replace(player_stats$Pct1SW, "%", ""))/100
player_stats$Pct2SW <- as.numeric(str_replace(player_stats$Pct2SW, "%", ""))/100
player_stats$PctBPS <- as.numeric(str_replace(player_stats$PctBPS, "%", ""))/100
player_stats$P1SR <- as.numeric(str_replace(player_stats$P1SR, "%", ""))/100
player_stats$P2SR <- as.numeric(str_replace(player_stats$P2SR, "%", ""))/100
#Saving for the app
write_rds(player_stats, "player_stats.rds")
golem::run_dev()
golem::run_dev()
?register_google
